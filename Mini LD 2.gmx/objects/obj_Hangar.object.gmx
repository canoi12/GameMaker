<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>indice = 0; // Indice que nos indica a opção selecionada no momento

// Atribui os valores das variáveis globais para as variáveis locais
energia = global.energia;
qtdBala = global.qtdBala;
velBala = global.velBala;
distBala = global.distBala;

// Preços dos upgrades
ini_open("SaveData.sav");
pEnergia = ini_read_real("Precos","Preco Energia",100);
pQtdBala = ini_read_real("Precos","Preco Timing Bala",100);
pVelBala = ini_read_real("Precos","Preco Velocidade Bala",100);
pDistBala = ini_read_real("Precos","Preco Distancia Bala",100);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ini_open("SaveData.sav");
if(keyboard_check_pressed(vk_up) &amp;&amp; indice &gt;= 0){
    indice -= 1;
}
if(indice &lt; 0){
    indice = 4;
}
if(keyboard_check_pressed(vk_down) &amp;&amp; indice &lt; 4){
    indice += 1;
}
else if(keyboard_check_pressed(vk_down) &amp;&amp; indice &gt;= 4){
    indice = 0;
}
if(keyboard_check_pressed(vk_right)){
    switch(indice){
        case 0:
            if(energia &lt; 3000 &amp;&amp; global.pontos &gt;= pEnergia){
                energia += 200;
                global.pontos -= pEnergia;
                pEnergia += 100;
                ini_write_real("Precos","Preco Energia",pEnergia);
                ini_write_real("Upgrades","Energia",energia);
            }
            break;
        case 1:
            if(qtdBala &gt; 2 &amp;&amp; global.pontos &gt;= pQtdBala){
                qtdBala -= 0.2;
                global.pontos -= pQtdBala;
                pQtdBala += 100;
                ini_write_real("Precos","Preco Timing Bala",pQtdBala);
                ini_write_real("Upgrades","Timing da Bala",qtdBala);
            }
            break;
        case 2:
            velBala += 0;
            break;
        case 3:
            if(distBala &lt; 2 &amp;&amp; global.pontos &gt;= pDistBala){
                distBala += 0.05;
                global.pontos -= pDistBala;
                pDistBala += 100;
                ini_write_real("Precos","Preco Distancia Bala",pDistBala);
                ini_write_real("Upgrades","Distancia da Bala",distBala);
            }
            break; 
    }
}
if(keyboard_check_pressed(vk_space) or keyboard_check_pressed(ord("X"))){
    if(indice == 4){
        global.energia = energia;
        global.qtdBala = qtdBala;
        global.velBala = velBala;
        global.distBala = distBala;
        room_goto(Canhao);
    }
}
ini_write_real("Pontos","pontos",global.pontos);
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(150,50,"$"+string(global.pontos));
if(indice &lt; 4){
    draw_text(150,100+(50*indice),"-&gt;");
} else {
   draw_text(50,350,"-&gt;"); 
}
draw_text(200,100,"$"+string(pEnergia)+" -&gt; Energia:"+string(energia));
draw_text(200,150,"$"+string(pQtdBala)+" -&gt; Timing das Balas:"+string(qtdBala));
draw_text(200,200,"Velocidade das Balas:"+string(velBala));
draw_text(200,250,"$"+string(pDistBala)+" -&gt; Distancia das Balas:"+string(distBala));
draw_text(150,350,"Ok!");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
