<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_moleculas</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if(room == rm_agua)
    {
        image_index = choose(1,4,5);
    }
    else if(room == rm_glicose)
    {
         image_index = choose(2,4,5);
    }
    else if(room == rm_cannabis)
    {
        image_index = choose(0,4,5);
    }
    image_speed = 0;
    // variables
    off = false;
    stable = false;
    onhold = false;
    match = 0;
    grav = 0;
    
    destroy = false;
    i = 0;
    j = 0;
    
    //stepSize = shader_get_uniform(shader0,"stepSize");
    //shader_set_uniform_f(stepSize,1/(image_),1/(sprite_height));
    
    ps = part_system_create();
    
    pt = part_type_create();
    part_type_shape(pt,pt_shape_disk);
    part_type_colour2(pt,c_white,c_black);
    part_type_direction(pt,0,270,0,0);
    part_type_speed(pt,1,2,.25,0);
    part_type_size(pt,0.2,0.3,0,0);
    part_type_life(pt,5,10);
    
    pe = part_emitter_create(ps);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
part_emitter_region(ps,pe,x,x,y,y,ps_shape_rectangle,ps_distr_linear);
part_emitter_burst(ps,pe,pt,5);

if(image_index == 0)
    global.alcool += 2*global.dificuldade;
    
if(image_index == 1)
    global.agua += 2*global.dificuldade;
    
if(image_index == 2)
    global.glicose += 2*global.dificuldade;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//off = false;
/*
//Checa horizontalmente
if(x&lt;604 and y&gt;120)
{
    var N1,N2;
    N1 = instance_position(x+86,y,obj_Moleculas);
    N2 = instance_position(x+172,y,obj_Moleculas);
    if(N1.stable and N2.stable)
    {
        if(N1.image_index == image_index and N2.image_index == image_index)
        {
            match = 1;
        }
    }
}

//Checa verticalmente
if(y &lt; 470 and y &gt; 120)
{
    var N3,N4;
    N3 = instance_position(x,y+86,obj_Moleculas);
    N4 = instance_position(x,y+172,obj_Moleculas);
    if(N3.stable and N4.stable)
    {
        if(N3.image_index == image_index and N4.image_index == image_index)
        {
            match = 2;
        }
    }
}
switch(match)
{
    case 1:
    with(N1)
    alarm[1]=1
    with(N2)
    alarm[1]=1
    alarm[1]=1
    match=0
    break;
    case 2:
    with(N3)
    alarm[1]=1
    with(N4)
    alarm[1]=1
    alarm[1]=1
    match=0
    break;
    
}*/
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.play){
    //if(off)
       //exit;
    
    if(!onhold)
    {
        //if(place_free(x,y+24) and y &lt; 642)
        reordGrid();
        //addNew();
        if(place_free(x,y+24) and y &lt; Ys+(i * 87))
        {
            //
            y += 12 + (global.dificuldade * 2);
            stable = false;        
        }
        else
        {
            if(!stable){
                if(image_index == 0 and i &gt;= 6 and room == rm_todas)
                {
                    alarm[0] = 5;
                    global.map[# j,i] = noone;
                    reordGrid();
                }
                y = Ys+(87*i);
            }
            if(!place_free(x,y)){
                y = Ys+(87*i);
            }
            
            addNew();
            stable = true;
            off = true;
            grav = 0;
            //alarm[0] = 5;
        }
    }
}    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!onhold &amp;&amp; !global.acerto &amp;&amp; !global.erro)
{
    if(mouse_x &gt; x-(sprite_width) and mouse_x &lt; x + sprite_width and 
        mouse_y &gt; y - sprite_height and mouse_y &lt; mouse_y + sprite_height)
        {
            //addNew();
            deletaGrid(i,j,image_index);
            reordGrid();
            //alarm[2] = 10;
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
//draw_text(x,y-25,j);
//draw_text(x,y,i);
//draw_text(x,y+15,instance_id);
//draw_text(x,y+30,self);
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
