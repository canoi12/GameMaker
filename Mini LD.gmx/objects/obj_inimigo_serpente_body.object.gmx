<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_inimigo_serpente_body</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Inimigo</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
vida = 5;
vivo = false;
l = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
/*if(!global.pause){
    if(x &lt; 0){
        instance_destroy();
    }
    if(vida &lt;= 0){
        if(instance_exists(obj_inimigo_serpente_head)){
            teste = ds_list_find_index(obj_inimigo_serpente_head.nave,id);
            ds_list_delete(obj_inimigo_serpente_head.nave,teste);
            teste2 = ds_list_size(obj_inimigo_serpente_head.nave);
        }
        
        instance_destroy();
        pemitter = part_emitter_create(ps);
        part_emitter_region(ps,pemitter,x,x,y,y,ps_shape_ellipse,ps_distr_linear);
        part_emitter_burst(ps,pemitter,pt,20);
        part_emitter_destroy(ps,pemitter);
        global.pontos += pontos;
        global.combo += 1;
        if (global.combo &lt; 1){ global.barraCombo = 100}
        else {
            if(global.barraCombo &lt; 80){
                global.barraCombo += 20;
            }
        }
    } 
    pisca = false;
}
i += qtdSin;
if(i mod (pi*2) == 0){
    i = 0;
}
y += cos(i)*magnitude

if(room == Testes){
    if(mouse_check_button(mb_left)){
        if(mouse_x &gt; bbox_left and mouse_x &lt; bbox_right and
            mouse_y &gt; bbox_top and mouse_y &lt; bbox_bottom){
            vida = 0;
        }
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
