<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_upgrade</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tela = 0; // Tela atual
opcao = global.piloto; // Piloto selecionado atualmente
opcaoUp = 0; // Opção atual do upgrade
/***** Upgrades *****/
Upgrade[0, 0] = "Up1"
Upgrade[0, 1] = "Up2"
Upgrade[1, 0] = "Up3"
Upgrade[1, 1] = "Up4"
Upgrade[2, 0] = "Up5"
Upgrade[2, 1] = "Up6"
Upgrade[3, 0] = "Launch"
Upgrade[3, 1] = "Launch"

m = 0; // Opção vertical dos Upgrades
n = 0; // Opção horizontal dos Upgrades

alpha = 0; // O alpha do fundo
i = 0;

velfadechar = 0.1; // velocidade do efeito de fade

// Fade do primeiro, segundo e terceiro piloto, respectivamente
j = 0; 
k = 0; 
l = 0;

time = shader_get_uniform(shd_gb,"u_time");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.piloto = opcao;
if(tela == 0){
    if(keyboard_check_pressed(vk_up) &amp;&amp; m &gt; 0){
        m -= 1;
    }
    if(keyboard_check_pressed(vk_down) &amp;&amp; m &lt; 3){
        m += 1;
    }
    if(keyboard_check_pressed(vk_left)){
        n = 0;
    }
    if(keyboard_check_pressed(vk_right)){
        n = 1;
    }
    opcaoUp = Upgrade[m, n];
    sprite_index = spr_upgrade;
    if(keyboard_check_pressed(vk_space) or keyboard_check_pressed(ord("X")) &amp;&amp; opcaoUp == "Launch"){
        global.upgrade = false;
    }
}
if(tela == 1){
    sprite_index = spr_selectchar;
    if(keyboard_check_pressed(vk_left) and opcao &gt; 0){
    opcao -= 1;
    }
    if(keyboard_check_pressed(vk_right) and opcao &lt; 2){
        opcao += 1;
    }
    if(opcao == 0){
        if(j &gt; 0) then j -= velfadechar;
        if(k &lt; 0.7) then k += velfadechar;
        if(l &lt; 0.7) then l += velfadechar;
    }
    else if(opcao == 1){
        if(k &gt; 0) then k -= velfadechar;
        if(j &lt; 0.7) then j += velfadechar;
        if(l &lt; 0.7) then l += velfadechar;
    }
    else if(opcao == 2){
        if(l &gt; 0) then l -= velfadechar;
        if(j &lt; 0.7) then j += velfadechar;
        if(k &lt; 0.7) then k += velfadechar;
    }
}
if(tela == 2){
    sprite_index = spr_selectstage;
}
if(tela == 3){
    sprite_index = spr_highscore;
}

// Aumenta ou diminui a opacidade do fundo, depende do estado atual
if(alpha &lt; 1 and global.upgrade) {
    alpha += 0.05;
}
if(alpha &gt; 0 and !global.upgrade and x &gt;= 720)
{
    alpha -= 0.05;
}
if(alpha &gt;= 1){
    i += 0.05;
    x = lerp(x,720*!global.upgrade,i);
}
if((x &lt;= 5 and global.upgrade) or (x &gt; 715 and !global.upgrade)){
    x = 720*!global.upgrade;
    i = 0;
}

// Comandos para mudar as telas
if(keyboard_check_pressed(ord("Q")) and tela &gt; 0){
    tela -= 1;
}
if(keyboard_check_pressed(ord("E")) and tela &lt; 3){
    tela += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_mask,0,0,0,1,1,0,c_white,alpha);
draw_self();
if(tela == 0){
    if(x &lt;= 5){
        if(m &lt; 3){
            //draw_rectangle_colour(322+(194*n),121+(66*m),385+(194*n),182+(67*m),c_white,c_white,c_white,c_white,true);
            draw_sprite(spr_btn_upgrades,0,322+(193*n),120+(67*m));
        }
        else {
            //draw_rectangle_colour(242,330,476,380,c_white,c_white,c_white,c_white,true);
            draw_sprite(spr_btn_launch,0,242,330);
        }
    }
}
if(tela == 1)
{
    draw_sprite(spr_chars,0,x+126,y+218);
    draw_sprite_ext(spr_chars,0,x+126,y+218,1,1,0,c_black,j);

    draw_sprite(spr_chars,1,x+126+146,y+218);
    draw_sprite_ext(spr_chars,1,x+126+146,y+218,1,1,0,c_black,k);

    draw_sprite(spr_chars,2,x+126+292,y+218);
    draw_sprite_ext(spr_chars,2,x+126+292,y+218,1,1,0,c_black,l);

}
if(tela == 2){
}
if(tela == 3){
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
