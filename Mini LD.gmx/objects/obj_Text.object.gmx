<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Texto[0] = "They came in a day like any other, raining fire from the sky, destroying everything on ther path, before we even had the time to notice more than half of the planet was wiped out. Through the sacrifices of many lives and sheer luck,the brightest minds of science managed to hind in a secrect base away from the enemy's eye.They pulled every resource, every idea, to find a way to fight back...and now,we have a solution!";
i = 1;
alarm[0] = room_speed;
write = true;
textWidth = 720;

actualText = "";
modo = "textbox";

textVel = room_speed/15;
textPauseVel = room_speed/2;

alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(modo == "textbox"){
    if(string_width(actualText) &gt;= textWidth*2-60 &amp;&amp; string_char_at(Texto[0], i) == " "){
        if(write){
            actualText += ".";
            if(string_copy(actualText, string_length(actualText)-3, 3)) == "..."{
                write = false;
            }
        }
    } else {
        actualText += string_char_at(Texto[0],i);
        i++
    }
} else {
    if(string_length(actualText) &gt;= string_length(Texto[0])){
        write = false;
    } else {
        actualText += string_char_at(Texto[0],i);
        i++
    }
}

if(string_char_at(Texto[0], i-1) == "," or string_char_at(Texto[0], i -1) == "."){
    alarm[0] = textPauseVel;
} else {
    alarm[0] = textVel;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!write and modo == "textbox"){
    if(keyboard_check_pressed(ord("x")) or keyboard_check_pressed(vk_space)){
        actualText = "";
        write = true;
    }
}
if(room == Cutscenes &amp;&amp; (keyboard_check_pressed(vk_space) || keyboard_check_pressed(ord("X")))){
    room_goto_next();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(alpha);
draw_set_font(font0);
draw_set_color(c_white);
draw_text_ext(x, y, actualText, 25, textWidth);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
